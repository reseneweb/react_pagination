{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","items","total","perPage","currentPage","onPageChange","numberOfLinks","Math","ceil","className","cn","disabled","href","onClick","previousLink","map","link","active","handleLinkClick","nextLink","item","App","useState","setPerPage","setCurrentPage","fromItem","toItem","id","onChange","event","Number","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAmBxC,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAG,YAAa,CAAEC,SAA0B,IAAhBP,IAD9B,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,kBAxBYC,EAwBgBV,EAAc,OAvBvC,IAAhBA,GACFC,EAAaS,IAFa,IAACA,GAmBvB,oBAWDpB,EAAW,EAAGY,GAAeS,KAAI,SAACC,GAAD,OAChC,oBAAIP,UAAWC,IAAG,YAAa,CAAEO,OAAQD,IAASZ,IAAlD,SACE,mBACE,UAAQ,WAERK,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBA3CG,SAACG,GACnBA,IAASZ,GACXC,EAAaW,GAyCUE,CAAgBF,IALjC,SAOGA,GALIA,QAUX,oBAAIP,UACFC,IAAG,YAAa,CAAEC,SAAUP,IAAgBE,IAD9C,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAAS,kBA/CQM,EA+CgBf,EAAc,OA9CnDA,IAAgBE,GAClBD,EAAac,IAFS,IAACA,GA0CnB,uBAWJ,6BACGlB,EAAMc,KAAI,SAACK,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpFJC,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KACMC,EAAWrB,EAAcD,EAAUA,EAAU,EAC7CuB,EAAStB,EAAcD,GAJf,GAIkCC,EAAcD,EAJhD,GAKRF,EAAQP,EAAW+B,EAAUC,GAAQX,KAAI,SAAAjB,GAAC,qBAAYA,MAW5D,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCqB,EADjC,cAC+CC,EAD/C,eApBU,GAoBV,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,SAvBkB,SAACC,GAC3BN,EAAWO,OAAOD,EAAME,OAAOC,QAC/BR,EAAe,IAsBPQ,MAAO7B,EALT,UAOE,wBAAQ6B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOA,EACPC,MA/CQ,GAgDRC,QAASA,EACTC,YAAaA,EACbC,aAtCe,SAACW,GACpBQ,EAAeR,UChBnBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a7a760c2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  items: string[],\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (currentPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const numberOfLinks = Math.ceil(total / perPage);\n  const handleLinkClick = (link: number) => {\n    if (link !== currentPage) {\n      onPageChange(link);\n    }\n  };\n\n  const handleClickToPrevious = (previousLink: number) => {\n    if (currentPage !== 1) {\n      onPageChange(previousLink);\n    }\n  };\n\n  const handleClickToNext = (nextLink: number) => {\n    if (currentPage !== numberOfLinks) {\n      onPageChange(nextLink);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={\n          cn('page-item', { disabled: currentPage === 1 })\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => handleClickToPrevious(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {getNumbers(1, numberOfLinks).map((link) => (\n          <li className={cn('page-item', { active: link === currentPage })}>\n            <a\n              data-cy=\"pageLink\"\n              key={link}\n              className=\"page-link\"\n              href={`#${link}`}\n              onClick={() => handleLinkClick(link)}\n            >\n              {link}\n            </a>\n          </li>\n        ))}\n\n        <li className={\n          cn('page-item', { disabled: currentPage === numberOfLinks })\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfLinks}\n            onClick={() => handleClickToNext(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const fromItem = currentPage * perPage - perPage + 1;\n  const toItem = currentPage * perPage <= total ? currentPage * perPage : total;\n  const items = getNumbers(fromItem, toItem).map(n => `Item ${n}`);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (link: number) => {\n    setCurrentPage(link);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}